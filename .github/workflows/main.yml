name: "Release Workflow"

on:
  workflow_dispatch:
    inputs:
      release_version:
        type: string
        description: release version when building docker containers (example; 2.0.0)

run-name: >-
  ${{ format('Release {0}', github.event.inputs.release_version) }}
        
jobs:
  build_aws_connector_docker_image:
    name: Release docker images
    runs-on: ubuntu-latest
    steps:        
    - name: Login to Github Registry
      uses: docker/login-action@v3
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate dummy env-config.js from template
      run: |
        cp env-docker-config.js env-config.js
        sed -i 's/${CHART_VERSION}/dummy_chart_version/g' env-config.js
        sed -i 's/${HELM_REVISION}/dummy_helm_revision/g' env-config.js
        sed -i 's/${OIDC_ENABLED}/false/g' env-config.js
        sed -i 's/${COGNITO_ENABLED}/false/g' env-config.js
        sed -i 's/${COGNITO_HOSTED_UI_DOMAIN}/dummy_cognito_hosted_ui_domain/g' env-config.js
        sed -i 's/${OIDC_AUTHORITY}/dummy_oidc_authority/g' env-config.js
        sed -i 's/${OIDC_CLIENT_ID}/dummy_oidc_client_id/g' env-config.js
        sed -i 's/${DOMAIN}/dummy_domain/g' env-config.js
        sed -i 's/$CLOUD_CONNECTORS/[]/g' env-config.js
        echo "env-config.js generated with dummy values"
        cat env-config.js

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        build-args: |
          SHA1VER=${{ env.SHA1VER }}
          VERSION=${{ github.event.inputs.release_version }}
        tags: |
            ghcr.io/lamassuiot/lamassu-ui:${{ github.event.inputs.release_version }}
            ghcr.io/lamassuiot/lamassu-ui:latest
        push: true
      
    - name: Create tag
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{ github.event.inputs.release_version }}',
            sha: context.sha
          })

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.event.inputs.release_version }}
        release_name: Release v${{ github.event.inputs.release_version }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
