name: Build Workflow

on:
  push:

jobs:
    build:
        name: "Build project"
        runs-on: ubuntu-latest
        env:
            NODE_OPTIONS: "--max-old-space-size=16384 --openssl-legacy-provider"
            GENERATE_SOURCEMAP: false
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '18'
            
            - name: Install dependencies
              run: npm install

            - name: Generate dummy env-config.js from template
              run: |
                cp env-docker-config.js env-config.js
                sed -i 's/${CHART_VERSION}/dummy_chart_version/g' env-config.js
                sed -i 's/${HELM_REVISION}/dummy_helm_revision/g' env-config.js
                sed -i 's/${OIDC_ENABLED}/false/g' env-config.js
                sed -i 's/${COGNITO_ENABLED}/false/g' env-config.js
                sed -i 's/${COGNITO_HOSTED_UI_DOMAIN}/dummy_cognito_hosted_ui_domain/g' env-config.js
                sed -i 's/${OIDC_AUTHORITY}/dummy_oidc_authority/g' env-config.js
                sed -i 's/${OIDC_CLIENT_ID}/dummy_oidc_client_id/g' env-config.js
                sed -i 's/${DOMAIN}/dummy_domain/g' env-config.js
                sed -i 's/$CLOUD_CONNECTORS/[]/g' env-config.js
                echo "env-config.js generated with dummy values"
                cat env-config.js

            - name: Build project
              run: |
                npm run build